import requests
from config import open_weather_token, tg_bot_token
from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

bot = Bot(token=tg_bot_token)
dp = Dispatcher(bot)

but1 =KeyboardButton('–ö–∏—ó–≤')
but2 =KeyboardButton('–õ—å–≤—ñ–≤')
but3 =KeyboardButton('–û–¥–µ—Å–∞')
but4 =KeyboardButton('–•–∞—Ä–∫—ñ–≤')
but5 =KeyboardButton('–î–Ω—ñ–ø—Ä–æ')

keyboard1 = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True). add(but1,but2,but3,but4,but5)


@dp.message_handler(commands=['weather'])
async def welcome(message: types.Message):
    await message.reply('–ü—Ä–∏–≤—ñ—Ç! –æ–±–∏—Ä–∞–π —Å–≤–æ—î –º—ñ—Å—Ç–æ, –∞–±–æ –∞–ø–∏—à–∏ –π–æ–≥–æ, —ñ —è –≤—ñ–¥–ø—Ä–∞–≤–ª—é —Ç–æ–±—ñ –ø–æ–≥–æ–¥—É',  reply_markup=keyboard1)


@dp.message_handler()
async def get_weather(message: types.Message):

        smile_weather = {
            'Clear': '‚òÄ–Ø—Å–Ω–æ ‚òÄ ',
            'Clouds': '‚òÅ–•–º–∞—Ä–Ω–æ ‚òÅ',
            'Rain': 'üíß–î–æ—â üíß',
            'Drizzle': 'üåß–î–æ—â üåß',
            'Thurderstorm': '‚ö°–ì—Ä–æ–∑–∞ ‚ö°',
            'Snow': 'üå®–°–Ω—ñ–≥ üå®',
            'Mist': 'üå´–¢—É–º–∞–Ω–≥ üå´'
        }

        try:
            a = requests.get(
                f"https://api.openweathermap.org/data/2.5/weather?q={message.text}&appid={open_weather_token}&units=metric"
                )
            data = a.json()
            city_name = data['name']  # –≤–∏–≤–æ–¥–∏–º–æ –Ω–∞–∑–≤—É
            country = data['sys']['country']  # –≤–∏–≤–æ–¥–º–æ –∫—Ä–∞—ó–Ω—É
            if city_name == data['name']:
                chat_id = message.from_user.id
            photo_url = 'https://bit.ly/3DupBdl'
            await dp.bot.send_photo(chat_id=chat_id, photo=photo_url)

            weather = data['weather'][0]['main']
            if weather in smile_weather:
                wd = smile_weather[weather]
            else:
                wd = '–ù–µ–∑—Ä–æ–∑—É–º—ñ–ª–∞ –ø–æ–≥–æ–¥–∞, —Å–∫–æ–¥–∏ –ø–æ–¥–∏–≤–∏—Å—å —É –≤—ñ–∫–Ω–æ '

            temp = data['main']['temp']  # –≤–∏–≤–æ–¥–∏–º–æ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É
            humidity = data['main']['humidity']  # –≤–∏–≤–æ–¥–∏–º–æ –≤–æ–ª–æ–≥—ñ—Å—Ç—å
            pressure = data['main']['pressure']  # –≤–∏–≤–æ–¥–∏–º–æ —Ç–∏—Å–∫
            wind = data['wind']['speed']  # –≤–∏–≤–æ–¥–∏–º–æ —à–≤–∏–¥–∫—ñ—Å—Ç—å –≤—ñ—Ç—Ä—É




            await message.reply(f'–ü–æ–≥–æ–¥–∞ –≤ –º—ñ—Å—Ç—ñ:‚≠ê{city_name}‚≠ê\n'
                                f'–ö—Ä–∞—ó–Ω–∞:‚≠ê{country}‚≠ê\n|'
                                f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:üå°Ô∏è {temp}C¬∞üå°Ô∏è\n'
                                f'–®–≤–∏–¥–∫—ñ—Å—Ç—å –≤—ñ—Ç—Ä—É:{wd}\n|'
                                f'–í–æ–ª–æ–≥—ñ—Å—Ç—å:üíß{humidity}%üíß\n'
                                f'–¢–∏—Å–∫:üôÇ{pressure} –º–º —Ä—Ç.—Å—Ç.üôÇ\n'
                                f'–®–≤–∏–¥–∫—ñ—Å—Ç—å –≤—ñ—Ç—Ä—É:üèéÔ∏è{wind} –º/—ÅüèéÔ∏è\n')
        except:
            await message.reply("–ü–µ—Ä–µ–≤—ñ—Ä –Ω–∞–∑–≤—É –º—ñ—Å—Ç–∞:")

if __name__ == '__main__':
    executor.start_polling(dp)


